/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
   	public ListNode splitList(ListNode head)
	{
		if(head == null || head.next == null)
			return null;
		ListNode a = head;
		ListNode b = head.next;
		while(b!=null && b.next!=null)
		{
			a=a.next;
			b = b.next.next;
		}
		b = a.next;
		a.next = null;
		return b;
	}
	
	public ListNode merge(ListNode a, ListNode b)
	{
		if(a == null)
			return b;
		if(b == null)
			return a;
		ListNode curr = null;
		if(a.val < b.val)
		{
			curr = a;
			curr.next = merge(a.next, b);
		}
		else
		{
			curr = b;
			curr.next = merge(a, b.next);
		}
		return curr;
	}
	
	public ListNode mergeSort(ListNode head)
	{
		if(head == null || head.next == null)
			return head;
		ListNode a = head;
		ListNode b = splitList(a);
		a = mergeSort(a);
		b = mergeSort(b);
		ListNode curr = merge(a, b);
		return curr;
	}
    public ListNode sortList(ListNode head) {
        return mergeSort(head);
    }
}
