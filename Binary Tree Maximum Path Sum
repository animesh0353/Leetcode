/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public int max = Integer.MIN_VALUE;
    public int maxPathSum1(TreeNode root) {
        if(root == null)
            return 0;
        int left = maxPathSum1(root.left);
        int right = maxPathSum1(root.right);
        int sumCurr = left + right + root.val;
        if(max < sumCurr)
            max = sumCurr;
        if( max < root.val)
            max = root.val;
            if(max < left + root.val)
            max = left + root.val;
            if(max < right + root.val)
            max = right + root.val;
        if( left < 0 && right < 0)
            return root.val;
        if(left > right)
            return left + root.val;
        else
            return right + root.val;
            
    }
    public int maxPathSum(TreeNode root) {
        if(root == null)
            return 0;
            
        maxPathSum1(root);
        return max;
            
    }
}
