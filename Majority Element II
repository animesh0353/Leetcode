public class Solution {
    public List<Integer> majorityElement(int[] nums) 
    {
    	List<Integer> list = new LinkedList<Integer>();
    	if(nums.length == 0 )
             return list;
    	int min = nums.length/3;
        int index1 = 0;
        int index2 = -1;
        int count1 = 1 , count2 = 0;
        for (int i = 1; i < nums.length; i++) 
        {
			if(nums[i] == nums[index1])
				count1++;
			else
			{
				if(index2<0)
				{
					count2 = 1;
					index2 = i;
				}
				else
				{
					if( nums[i] == nums[index2])
						count2++;
					else
					{

						if(count1 == 0)
						{
							count1 = 1;
							index1 = i;
						}
						else
						{
							if(count2 == 0)
							{
								count2 = 1;
								index2 = i;
							}
							else 
							{
								count1--;
								count2--;
							}
						}
					}
				}
			}
		}
        count1 = 0; count2 = 0;
        for (int i = 0; i < nums.length; i++) {
			if(nums[i] == nums[index1])
				count1++;
			else
			{
				if(index2 > -1 && nums[i] == nums[index2])
					count2++;
			}
		}
        if(count1 > min)
        	list.add(nums[index1]);
        if(count2 > min)
        	list.add(nums[index2]);
        return list;
    }
}
