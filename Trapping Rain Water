public class Solution {
    public static int trap(int[] height) 
    {
    	int n = height.length;
    	if(n<=2)
    	    return 0;
        int[] left = new int[n];
        int[] right = new int[n];
        
        // from left to right
        int max = height[0];
        for (int i = 0; i < n; i++) 
        {
        	if(max < height[i])
        	{
        		max = height[i];
        		left[i] = height[i];
        	}
        	else
        		left[i] = max;
		}
        
        // from right to left
        max = height[n-1];
        for (int i = n-1; i >= 0; i--)
        {
			if(max < height[i])
			{
				max = height[i];
				right[i] = height[i];
			}
			else
				right[i] = max;
		}
        int sum = 0;
        for (int i = 0; i < n; i++) 
        {
        	sum += Math.min(left[i], right[i]) - height[i];
		}
        return sum;
    }
}
