//    There are N gas stations along a circular route, where the amount of gas at station i is gas[i].
//
//    You have a car with an unlimited gas tank and it costs cost[i] of gas to travel from station i to its next station (i+1). You begin the journey with an empty tank at one of the gas stations.
//
//    Return the starting gas station's index if you can travel around the circuit once, otherwise return -1.
//
//    Note:
//    The solution is guaranteed to be unique. 

public class Solution {
    public static int canCompleteCircuit(int[] gas, int[] cost) 
    {
        int n = gas.length;
        if(n==0)
        	return -1;
        if(n == 1 && gas[0]-cost[0]>=0)
        	return 0;
        int sum = 0;
        for (int i = 0; i < n; i++) {
			gas[i] -= cost[i];
			sum += gas[i];
		}
		if(sum <0)
		    return -1;
		
        int tail = 0 , head = 1;
        sum = gas[0];
        while(head != tail)
        {
        	
        	while(sum<0)
        	{
        		if(gas[tail]>0)
        		{
        			tail = head;
        			sum = gas[tail];
        			head = head+1;
        			head %= n;
        			break;
        		}
        		else
        		{
        			sum -= gas[tail++];
        			tail %= n;
        		}
        	}
        	sum += gas[head++];
        	head = head%n;
		}
        return tail;
    }
}
